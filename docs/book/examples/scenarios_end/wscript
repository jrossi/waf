#! /usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2006-2010 (ita)

VERSION='1.0.1'
APPNAME='cc_test'

top = '.'
out = 'build'

def options(opt):
	opt.tool_options('compiler_cc')

def configure(conf):
	conf.check_tool('compiler_cc')

def build(bld):
	bld.program(
		source   = 'main.c about.c',
		target   = 'app',
		includes = '.',
		use      = 'my_static_lib')
	bld.stlib(
		source   = 'test_staticlib.c',
		target   = 'my_static_lib')

"""
# special processing for "about.c" ...
import os
from Constants import *
import Task
import cc
def runnable_status(self):
	if self.inputs[0].name == 'about.c':
		h = 0
		for tg in self.generator.bld.all_task_gen:

			h = hash((self.generator.bld.hash_env_vars(self.generator.env, ['LINKFLAGS']), h))

			for tsk in getattr(tg, 'compiled_tasks', []): # all .c or .cpp compilations

				if id(tsk) == id(self):
					# but not 'about.c' (skip other tasks too if necessary)
					continue

				if not tsk.hasrun:
					return ASK_LATER

				h = hash((tsk.signature(), h))
		self.env.CCDEPS = h

		try:
			os.stat(self.generator.link_task.outputs[0].abspath(self.env))
		except:
			return RUN_ME

	return Task.Task.runnable_status(self)
Task.TaskBase.classes['c'].runnable_status = runnable_status
"""

